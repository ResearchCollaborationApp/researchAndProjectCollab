{"ast":null,"code":"var _jsxFileName = \"/Users/bhuwanbhandari/Desktop/Profile Demo/profile/src/Components/userInformation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../userInformation.css';\nimport { pageInformation } from './data.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserInformation() {\n  _s();\n  const [pageNum, setPageNum] = useState(0);\n  const [pageData, setPageData] = useState(pageInformation[pageNum]);\n  const [formData, setFormData] = useState(pageInformation[pageNum]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    pageNum++;\n    e.preventDefault();\n    console.log('Form Data:', formData);\n    setPageData(pageInformation[pageNum]);\n    // You can add form submission logic here, like sending the data to an API\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"information-forms-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(UserInformation, \"jx9TP/SZ2umdnhLYZD5ma2RaRew=\");\n_c = UserInformation;\nconst createForm = (type, name, formData, fieldName, handlingFunction) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      className: \"form-label\",\n      children: fieldName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      id: name,\n      name: name,\n      value: formData[name],\n      onChange: handlingFunction,\n      className: \"form-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\nvar _c;\n$RefreshReg$(_c, \"UserInformation\");","map":{"version":3,"names":["React","useState","pageInformation","jsxDEV","_jsxDEV","UserInformation","_s","pageNum","setPageNum","pageData","setPageData","formData","setFormData","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","createForm","type","fieldName","handlingFunction","children","htmlFor","id","onChange","$RefreshReg$"],"sources":["/Users/bhuwanbhandari/Desktop/Profile Demo/profile/src/Components/userInformation.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../userInformation.css';\nimport {pageInformation} from './data.js';\n\nexport default function UserInformation() {\n  const [pageNum, setPageNum] = useState(0);\n\n  const [pageData, setPageData] = useState(pageInformation[pageNum]\n\n  );\n  const [formData, setFormData] = useState(pageInformation[pageNum]\n  );\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = (e) => {\n    pageNum++;\n    e.preventDefault();\n    console.log('Form Data:', formData);\n    setPageData(pageInformation[pageNum])\n    // You can add form submission logic here, like sending the data to an API\n  };\n\n  return (\n    <div className=\"information-forms-container\">\n      \n    </div>\n  );\n}\nconst createForm = (type, name, formData, fieldName, handlingFunction) =>{\n  return <div className=\"form-group\">\n          <label htmlFor={name} className=\"form-label\">{fieldName}</label>\n          <input \n            type= {type} \n            id={name}\n            name={name}\n            value={formData[name]} \n            onChange={handlingFunction} \n            className=\"form-input\"\n          />\n      </div>\n}\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAC/B,SAAQC,eAAe,QAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAACC,eAAe,CAACK,OAAO,CAEhE,CAAC;EACD,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAACC,eAAe,CAACK,OAAO,CAChE,CAAC;EAED,MAAMM,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCL,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACI,IAAI,GAAGC;IAAM,CAAC,CAAC;EAC7C,CAAC;EAED,MAAME,YAAY,GAAIJ,CAAC,IAAK;IAC1BP,OAAO,EAAE;IACTO,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEV,QAAQ,CAAC;IACnCD,WAAW,CAACR,eAAe,CAACK,OAAO,CAAC,CAAC;IACrC;EACF,CAAC;EAED,oBACEH,OAAA;IAAKkB,SAAS,EAAC;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvC,CAAC;AAEV;AAACpB,EAAA,CA3BuBD,eAAe;AAAAsB,EAAA,GAAftB,eAAe;AA4BvC,MAAMuB,UAAU,GAAGA,CAACC,IAAI,EAAEd,IAAI,EAAEJ,QAAQ,EAAEmB,SAAS,EAAEC,gBAAgB,KAAI;EACvE,oBAAO3B,OAAA;IAAKkB,SAAS,EAAC,YAAY;IAAAU,QAAA,gBAC1B5B,OAAA;MAAO6B,OAAO,EAAElB,IAAK;MAACO,SAAS,EAAC,YAAY;MAAAU,QAAA,EAAEF;IAAS;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChEtB,OAAA;MACEyB,IAAI,EAAGA,IAAK;MACZK,EAAE,EAAEnB,IAAK;MACTA,IAAI,EAAEA,IAAK;MACXC,KAAK,EAAEL,QAAQ,CAACI,IAAI,CAAE;MACtBoB,QAAQ,EAAEJ,gBAAiB;MAC3BT,SAAS,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACZ,CAAC;AAAA,IAAAC,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}